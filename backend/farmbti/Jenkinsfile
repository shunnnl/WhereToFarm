pipeline {
    agent any

    environment {
        DOCKER_HUB_USERNAME = "nageum"
        IMAGE_NAME = "farmbti_backend"
        CONTAINER_NAME = "farmbti-backend"
        PORT = "8081"
        GIT_CREDENTIALS_ID = 'gitlab-credentials'
        DOCKER_CREDENTIALS_ID = 'docker-hub'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/backend']],
                    userRemoteConfigs: [[
                    url: 'https://lab.ssafy.com/s12-bigdata-dist-sub1/S12P21D209.git',
                    credentialsId: 'gitlab-credentials'
                    ]]
                ])
            }
        }

        stage('Load .env File') {
            steps {
                configFileProvider([configFile(fileId: 'env-config', targetLocation: 'backend/farmbti/.env')]) {
                    script {
                        sh '''
                        #!/bin/bash
                        set -e
                        echo "✅ .env 파일 로드 중..."
                        cat backend/farmbti/.env
                        export $(grep -v '^#' backend/farmbti/.env | xargs)
                        '''
                    }
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend/farmbti') {
                    sh '''
                    #!/bin/bash
                    set -e
                    echo "✅ 백엔드 빌드 시작"
                    export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"
                    export $(grep -v '^#' .env | xargs)
                    ./gradlew clean build
                    echo "✅ 빌드 완료"
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // 빌드된 JAR 파일을 찾아서 복사
                    sh '''
                    #!/bin/bash
                    set -e
                    echo "✅ 빌드 결과물 찾기"
                    JAR_FILE=$(find backend/farmbti/build/libs -name "*.jar" | head -n 1)
                    echo "JAR 파일: $JAR_FILE"

                    # docker-compose.yml 파일도 복사
                    echo "✅ Docker 설정 파일 복사"
                    cp backend/farmbti/docker-compose.yml /tmp/docker-compose.yml
                    cp backend/farmbti/Dockerfile /tmp/Dockerfile

                    # JAR 파일을 지정된 위치로 복사
                    echo "✅ JAR 파일 복사"
                    sudo mkdir -p /home/ubuntu/app/backend/deploy
                    sudo cp $JAR_FILE /home/ubuntu/app/backend/deploy/app.jar
                    sudo cp /tmp/docker-compose.yml /home/ubuntu/app/backend/deploy/
                    sudo cp /tmp/Dockerfile /home/ubuntu/app/backend/deploy/

                    # 도커 컨테이너 재시작
                    echo "✅ Docker 컨테이너 재시작"
                    cd /home/ubuntu/app/backend/deploy
                    sudo docker-compose down || true
                    sudo docker-compose build --no-cache
                    sudo docker-compose up -d
                    '''

                    echo "✅ 배포 완료!!"
                    sh 'docker ps -a | grep ${CONTAINER_NAME}'
                }
            }
        }
    }
}