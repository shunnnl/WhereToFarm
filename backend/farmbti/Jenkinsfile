pipeline {
    agent any

    environment {
        IMAGE_NAME = "s12p21d209_backend"
        CONTAINER_NAME = "farmbti-backend"
        PORT = "8081"
        GIT_CREDENTIALS_ID = 'gitlab-credentials'
    }

    stages {
        stage('Load .env File') {
            steps {
                configFileProvider([configFile(fileId: 'env-config', targetLocation: 'backend/farmbti/.env')]) {
                    script {
                        sh '''
                        #!/bin/bash
                        set -e
                        echo "✅ .env 파일 로드 중..."
                        cat backend/farmbti/.env
                        export $(grep -v '^#' backend/farmbti/.env | xargs)
                        '''
                    }
                }
            }
        }

        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/backend']],
                    userRemoteConfigs: [[
                        url: 'https://lab.ssafy.com/s12-bigdata-dist-sub1/S12P21D209.git',
                        credentialsId: 'gitlab-credentials'
                    ]]
                ])
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend/farmbti') {
                    sh '''
                    #!/bin/bash
                    set -e
                    echo "✅ 백엔드 빌드 시작"
                    export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"
                    export $(grep -v '^#' .env | xargs)
                    ./gradlew clean build
                    echo "✅ 빌드 완료"
                    '''
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('backend/farmbti') {
                    sh '''
                    #!/bin/bash
                    set -e
                    echo "✅ Docker 이미지 빌드 시작"
                    docker build -t ${IMAGE_NAME}:latest .
                    echo "✅ Docker 이미지 빌드 완료"
                    '''
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub', url: 'https://index.docker.io/v1/']) {
                    sh '''
                    #!/bin/bash
                    set -e
                    echo "✅ Docker Hub에 이미지 푸시 중..."
                    docker push ${IMAGE_NAME}:latest
                    echo "✅ Docker 이미지 푸시 완료"
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                #!/bin/bash
                set -e
                echo "✅ 기존 컨테이너 종료 및 삭제"
                docker stop ${CONTAINER_NAME} || true
                docker rm ${CONTAINER_NAME} || true
                
                echo "✅ 새로운 컨테이너 실행"
                docker run -d --name ${CONTAINER_NAME} -p ${PORT}:${PORT} ${IMAGE_NAME}:latest
                
                echo "✅ 배포 완료"
                '''
            }
        }
    }
}
