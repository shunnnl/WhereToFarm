pipeline {
    agent any

    environment {
        DOCKER_HUB_USERNAME = "nageum"
        IMAGE_NAME = "farmbti_backend"
        CONTAINER_NAME = "farmbti-backend"
        PORT = "8081"
        GIT_CREDENTIALS_ID = 'gitlab-credentials'
        DOCKER_CREDENTIALS_ID = 'docker-hub'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/backend']],
                    userRemoteConfigs: [[
                    url: 'https://lab.ssafy.com/s12-bigdata-dist-sub1/S12P21D209.git',
                    credentialsId: 'gitlab-credentials'
                    ]]
                ])
            }
        }

        stage('Load .env File') {
            steps {
                configFileProvider([configFile(fileId: 'env-config', targetLocation: 'backend/farmbti/.env')]) {
                    script {
                        sh '''
                        #!/bin/bash
                        set -e
                        echo "✅ .env 파일 로드 중..."
                        cat backend/farmbti/.env
                        export $(grep -v '^#' backend/farmbti/.env | xargs)
                        '''
                    }
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend/farmbti') {
                    sh '''
                    #!/bin/bash
                    set -e
                    echo "✅ 백엔드 빌드 시작"
                    export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"
                    export $(grep -v '^#' .env | xargs)
                    ./gradlew clean build
                    echo "✅ 빌드 완료"
                    '''
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo "✅ 기존 컨테이너 종료 및 삭제"
                    sh 'docker stop ${CONTAINER_NAME} || true'
                    sh 'docker rm ${CONTAINER_NAME} || true'

                    echo "✅ 배포 시작"
                    sh 'docker-compose -f backend/farmbti/docker-compose.yml down || true'
                    sh 'docker-compose -f backend/farmbti/docker-compose.yml build --no-cache'
                    sh 'docker-compose -f backend/farmbti/docker-compose.yml up -d'

                    echo "✅ 자동 업데이트 스크립트 실행"
                    sh '''
                    #!/bin/bash
                    # 자동 업데이트 스크립트 생성
                    cat > update_app.sh << 'EOF'
                    #!/bin/bash
                    # 애플리케이션 디렉토리로 이동
                    cd /home/ubuntu/app/backend/farmbti

                    # 최신 코드 가져오기
                    git fetch origin
                    git reset --hard origin/backend

                    # Docker 재시작
                    docker-compose down
                    docker-compose build --no-cache
                    docker-compose up -d
                    EOF

                    # 스크립트에 실행 권한 부여
                    chmod +x update_app.sh

                    # 스크립트 실행 (sudo 필요시)
                    sudo ./update_app.sh
                    '''

                    echo "✅ 배포 완료!!"
                    sh 'docker ps -a | grep ${CONTAINER_NAME}'
                }
            }
        }
    }
}