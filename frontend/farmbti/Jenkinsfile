pipeline {
    agent any

    tools {
        nodejs 'node18'
    }

    environment {
        GIT_CREDENTIALS_ID = 'gitlab-credentials'
        FRONT_PROJECT_DIR = "frontend/farmbti"
        DIST_DIR = "frontend/farmbti/dist"
        DIST_SHARE_DIR = "/home/ubuntu/dist-share"
        NGINX_HTML_DIR = "/usr/share/nginx/html"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'front']],
                    userRemoteConfigs: [[
                        url: 'https://lab.ssafy.com/s12-bigdata-dist-sub1/S12P21D209.git',
                        credentialsId: "${GIT_CREDENTIALS_ID}"
                    ]]
                ])
                sh 'echo "✅ 코드 체크아웃 완료"'
            }
        }

        stage('Build Frontend') {
            steps {
                dir("${FRONT_PROJECT_DIR}") {
                    sh '''
                    echo "✅ 프론트엔드 빌드 시작"
                    rm -rf node_modules dist
                    npm install --legacy-peer-deps
                    npm run build
                    echo "✅ 프론트엔드 빌드 완료"
                    '''
                }
            }
        }

        stage('Copy dist to Shared Directory') {
            steps {
                sh '''
                echo "✅ dist 공유 디렉토리 복사 시작"
                rm -rf /home/ubuntu/dist-share
                mkdir -p /home/ubuntu/dist-share
                cp -r frontend/farmbti/dist/* /home/ubuntu/dist-share/
                echo "✅ 복사 완료"
                '''
            }
        }

        stage('Deploy to Nginx') {
            steps {
                script {
                    try {
                        sh '''
                        echo "✅ Nginx 배포 시작"
                        sudo rm -rf /usr/share/nginx/html/*
                        sudo cp -r frontend/farmbti/dist/* /usr/share/nginx/html/
                        sudo systemctl restart nginx
                        echo "✅ Nginx 배포 완료"
                        '''
                    } catch (Exception e) {
                        echo "❌ Nginx 배포 중 오류 발생: ${e.getMessage()}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
    }

    post {
        success {
            echo "✅ 프론트엔드 빌드 및 배포 성공"
        }
        failure {
            echo "❌ 프론트엔드 빌드 또는 배포 실패"
        }
    }
}